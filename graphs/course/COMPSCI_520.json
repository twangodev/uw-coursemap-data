[
    {
        "data": {
            "description": "Basic concepts of logic, sets, partial order and other relations, and functions. Basic concepts of mathematics (definitions, proofs, sets, functions, and relations) with a focus on discrete structures: integers, bits, strings, trees, and graphs.  Propositional logic, Boolean algebra, and predicate logic. Mathematical induction and recursion. Invariants and algorithmic correctness. Recurrences and asymptotic growth analysis. Fundamentals of counting.",
            "id": "COMPSCI/MATH 240",
            "title": "INTRODUCTION TO DISCRETE MATHEMATICS"
        }
    },
    {
        "data": {
            "description": "Basics about the notion, capabilities, and limitations of computation: elements of finite automata and regular languages, computability theory, and computational complexity theory. Additional topics include context-free grammars and languages, and complexity-theoretic cryptography.",
            "id": "COMPSCI 520",
            "parent": "COMPSCI",
            "title": "INTRODUCTION TO THEORY OF COMPUTING"
        }
    },
    {
        "data": {
            "description": "Continuation ofMATH\u00a0171. Topics in algebra, trigonometry and precalculus are integrated with elementary differential calculus. Completion ofMATH\u00a0217implies completion ofMATH\u00a0221and114.",
            "id": "MATH 217",
            "parent": "MATH",
            "title": "CALCULUS WITH ALGEBRA AND TRIGONOMETRY II"
        }
    },
    {
        "data": {
            "description": "Covers the necessary mathematical tools needed to succeed in our algebra course and provides fundamental mathematical skills. Topics include real numbers, linear equations and inequalities, integral and fractional exponents, polynomials and their arithmetic, polynomial equations and equations with fractional exponents, the quadratic formula and completing the square, systems of two linear equations, graphing, and problem solving using algebra and graphs. All students must pass an assessment on basic mathematical skills to complete the course. The course does not count for degree credit.",
            "id": "MATH 96",
            "parent": "MATH",
            "title": "PREPARATORY ALGEBRA"
        }
    },
    {
        "data": {
            "description": "Introduction to Object-Oriented Programming using classes and objects to solve more complex problems. Introduces array-based and linked data structures: including lists, stacks, and queues. Programming assignments require writing and developing multi-class (file) programs using interfaces, generics, and exception handling to solve challenging real world problems. Topics reviewed include reading/writing data and objects from/to files and exception handling, and command line arguments. Topics introduced: object-oriented design; class vs. object; create and define interfaces and iterators; searching and sorting; abstract data types (List,Stack,Queue,PriorityQueue(Heap),Binary Search Tree); generic interfaces (parametric polymorphism); how to design and write test methods and classes; array based vs. linked node implementations; introduction to complexity analysis; recursion.",
            "id": "COMPSCI 300",
            "parent": "COMPSCI",
            "title": "PROGRAMMING II"
        }
    },
    {
        "data": {
            "description": "Learn the process of incrementally developing small (200-500 lines) programs along with the fundamental Computer Science topics. These topics include: problem abstraction and decomposition, the edit-compile-run cycle, using variables of primitive and more complex data types, conditional and loop-based flow control, basic testing and debugging techniques, how to define and call functions (methods), and IO processing techniques. Also teaches and reinforces good programming practices including the use of a consistent style, and meaningful documentation. Intended for students who have no prior programming experience.",
            "id": "COMPSCI 200",
            "parent": "COMPSCI",
            "title": "PROGRAMMING I"
        }
    },
    {
        "data": {
            "description": "The third course in our programming fundamentals sequence. It presumes that students understand and use functional and object-oriented design and abstract data types as needed. This course introduces balanced search trees, graphs, graph traversal algorithms, hash tables and sets, and complexity analysis and about classes of problems that require each data type. Students are required to design and implement using high quality professional code, a medium sized program, that demonstrates knowledge and use of latest language features, tools, and conventions. Additional topics introduced will include as needed for projects: inheritance and polymorphism; anonymous inner classes, lambda functions, performance analysis to discover and optimize critical code blocks. Students learn about industry standards for code development. Students will design and implement a medium size project with a more advanced user-interface design, such as a web or mobile application with a GUI and event- driven implementation; use of version-control software.",
            "id": "COMPSCI 400",
            "parent": "COMPSCI",
            "title": "PROGRAMMING III"
        }
    },
    {
        "data": {
            "description": "Topics in algebra, trigonometry and precalculus are integrated with elementary differential calculus. Part of a 2-semester sequence withMATH\u00a0217; these two courses together are equivalent toMATH\u00a0114and221.",
            "id": "MATH 171",
            "parent": "MATH",
            "title": "CALCULUS WITH ALGEBRA AND TRIGONOMETRY I"
        }
    },
    {
        "data": {
            "id": "COMPSCI",
            "type": "compound"
        }
    },
    {
        "data": {
            "id": "CROSSLISTED",
            "type": "compound"
        }
    },
    {
        "data": {
            "id": "MATH",
            "type": "compound"
        }
    },
    {
        "data": {
            "source": "COMPSCI 200",
            "target": "COMPSCI 300"
        }
    },
    {
        "data": {
            "source": "COMPSCI 300",
            "target": "COMPSCI 400"
        }
    },
    {
        "data": {
            "source": "COMPSCI 400",
            "target": "COMPSCI 520"
        }
    },
    {
        "data": {
            "source": "COMPSCI/MATH 240",
            "target": "COMPSCI 520"
        }
    },
    {
        "data": {
            "source": "MATH 171",
            "target": "MATH 217"
        }
    },
    {
        "data": {
            "source": "MATH 217",
            "target": "COMPSCI/MATH 240"
        }
    },
    {
        "data": {
            "source": "MATH 96",
            "target": "MATH 171"
        }
    }
]