[
    {
        "data": {
            "description": "An overview of computing concepts that support modeling and simulation in engineering applications. Learn the basics of computer architecture, software development and the interplay between software and hardware components.",
            "id": "ME 459",
            "parent": "ME",
            "title": "COMPUTING CONCEPTS FOR APPLICATIONS IN ENGINEERING"
        }
    },
    {
        "data": {
            "description": "Introduction to Object-Oriented Programming using classes and objects to solve more complex problems. Introduces array-based and linked data structures: including lists, stacks, and queues. Programming assignments require writing and developing multi-class (file) programs using interfaces, generics, and exception handling to solve challenging real world problems. Topics reviewed include reading/writing data and objects from/to files and exception handling, and command line arguments. Topics introduced: object-oriented design; class vs. object; create and define interfaces and iterators; searching and sorting; abstract data types (List,Stack,Queue,PriorityQueue(Heap),Binary Search Tree); generic interfaces (parametric polymorphism); how to design and write test methods and classes; array based vs. linked node implementations; introduction to complexity analysis; recursion.",
            "id": "COMPSCI 300",
            "parent": "COMPSCI",
            "title": "PROGRAMMING II"
        }
    },
    {
        "data": {
            "description": "Introduction to the Robot Operating System (ROS). Concepts of vehicle dynamics modeling and simulation, with focus on tire, suspension, steering system, and powertrain modeling. Simulation of sensors (camera, lidar, radar, GPS, IMU). Terramechanics modeling for mobility on deformable terrains. Introduction to the autonomy stack (sensing, perception, planning, and control). Elements of artificial intelligence in autonomy. Elements of verification and validation.",
            "id": "ME 468",
            "parent": "ME",
            "title": "COMPUTER MODELING AND SIMULATION OF AUTONOMOUS VEHICLES AND ROBOTS"
        }
    },
    {
        "data": {
            "description": "Learn the process of incrementally developing small (200-500 lines) programs along with the fundamental Computer Science topics. These topics include: problem abstraction and decomposition, the edit-compile-run cycle, using variables of primitive and more complex data types, conditional and loop-based flow control, basic testing and debugging techniques, how to define and call functions (methods), and IO processing techniques. Also teaches and reinforces good programming practices including the use of a consistent style, and meaningful documentation. Intended for students who have no prior programming experience.",
            "id": "COMPSCI 200",
            "parent": "COMPSCI",
            "title": "PROGRAMMING I"
        }
    },
    {
        "data": {
            "id": "COMPSCI",
            "type": "compound"
        }
    },
    {
        "data": {
            "id": "ME",
            "type": "compound"
        }
    },
    {
        "data": {
            "source": "COMPSCI 200",
            "target": "COMPSCI 300"
        }
    },
    {
        "data": {
            "source": "COMPSCI 200",
            "target": "ME 459"
        }
    },
    {
        "data": {
            "source": "COMPSCI 300",
            "target": "ME 468"
        }
    },
    {
        "data": {
            "source": "ME 459",
            "target": "ME 468"
        }
    }
]