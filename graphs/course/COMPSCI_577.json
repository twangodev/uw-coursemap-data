[
    {
        "data": {
            "description": "Covers the graphs, properties and geometric significance of trigonometric functions of a real variable. Other topics include trigonometric equations and identities, application, trigonometric form of complex numbers, DeMoivre's theorem, and polar and parametric equations. The course also has a significant number of applications, especially related to other disciplines.",
            "id": "MATH 113",
            "parent": "MATH",
            "title": "TRIGONOMETRY"
        }
    },
    {
        "data": {
            "description": "Basic paradigms for the design and analysis of efficient algorithms: greed, divide-and-conquer, dynamic programming, reductions, and the use of randomness. Computational intractability including typical NP-complete problems and ways to deal with them.",
            "id": "COMPSCI 577",
            "parent": "COMPSCI",
            "title": "INTRODUCTION TO ALGORITHMS"
        }
    },
    {
        "data": {
            "description": "Covers the necessary mathematical tools needed to succeed in our algebra course and provides fundamental mathematical skills. Topics include real numbers, linear equations and inequalities, integral and fractional exponents, polynomials and their arithmetic, polynomial equations and equations with fractional exponents, the quadratic formula and completing the square, systems of two linear equations, graphing, and problem solving using algebra and graphs. All students must pass an assessment on basic mathematical skills to complete the course. The course does not count for degree credit.",
            "id": "MATH 96",
            "parent": "MATH",
            "title": "PREPARATORY ALGEBRA"
        }
    },
    {
        "data": {
            "description": "Introduction to Object-Oriented Programming using classes and objects to solve more complex problems. Introduces array-based and linked data structures: including lists, stacks, and queues. Programming assignments require writing and developing multi-class (file) programs using interfaces, generics, and exception handling to solve challenging real world problems. Topics reviewed include reading/writing data and objects from/to files and exception handling, and command line arguments. Topics introduced: object-oriented design; class vs. object; create and define interfaces and iterators; searching and sorting; abstract data types (List,Stack,Queue,PriorityQueue(Heap),Binary Search Tree); generic interfaces (parametric polymorphism); how to design and write test methods and classes; array based vs. linked node implementations; introduction to complexity analysis; recursion.",
            "id": "COMPSCI 300",
            "parent": "COMPSCI",
            "title": "PROGRAMMING II"
        }
    },
    {
        "data": {
            "description": "Introduction to calculus of functions of several variables; calculus on parameterized curves, derivatives of functions of several variables, multiple integrals, vector calculus.",
            "id": "MATH 234",
            "parent": "MATH",
            "title": "CALCULUS--FUNCTIONS OF SEVERAL VARIABLES"
        }
    },
    {
        "data": {
            "description": "Introduction to differential and integral calculus and plane analytic geometry; applications; transcendental functions.",
            "id": "MATH 221",
            "parent": "MATH",
            "title": "CALCULUS AND ANALYTIC GEOMETRY 1"
        }
    },
    {
        "data": {
            "description": "Learn the process of incrementally developing small (200-500 lines) programs along with the fundamental Computer Science topics. These topics include: problem abstraction and decomposition, the edit-compile-run cycle, using variables of primitive and more complex data types, conditional and loop-based flow control, basic testing and debugging techniques, how to define and call functions (methods), and IO processing techniques. Also teaches and reinforces good programming practices including the use of a consistent style, and meaningful documentation. Intended for students who have no prior programming experience.",
            "id": "COMPSCI 200",
            "parent": "COMPSCI",
            "title": "PROGRAMMING I"
        }
    },
    {
        "data": {
            "description": "Problems of enumeration, distribution, and arrangement. Inclusion-exclusion principle. Generating functions and linear recurrence relations. Combinatorial identities. Graph coloring problems. Finite designs. Systems of distinct representatives and matching problems in graphs. Potential applications in the social, biological, and physical sciences. Puzzles. Problem solving.",
            "id": "COMPSCI/MATH/STAT 475",
            "title": "INTRODUCTION TO COMBINATORICS"
        }
    },
    {
        "data": {
            "description": "Properties of elementary functions, such as polynomial, absolute value, radical, rational, exponential, and logarithmic functions. Topics include equations, inequalities, functions, and their graphs. Students will formulate, analyze, solve, and interpret mathematical and real-world problems. Intended to provide the algebra skills required for calculus.",
            "id": "MATH 112",
            "parent": "MATH",
            "title": "ALGEBRA"
        }
    },
    {
        "data": {
            "description": "Techniques of integration, improper integrals, first order ordinary differential equations, sequences and series, Taylor series, vector geometry in two and three dimensions.",
            "id": "MATH 222",
            "parent": "MATH",
            "title": "CALCULUS AND ANALYTIC GEOMETRY 2"
        }
    },
    {
        "data": {
            "description": "The theory of linear algebra with an introduction to proofs and proof writing. Topics include vector spaces, linear dependence, span, basis, linear transformations, kernel, image, inner products and inner product spaces, geometry, eigenvalues, eigenvectors, standard matrix factorizations. Other content includes basic set theory, logical operations, quantifiers, direct and indirect arguments, and induction. Differential equations [MATH\u00a0320] not covered.",
            "id": "MATH 341",
            "parent": "MATH",
            "title": "LINEAR ALGEBRA"
        }
    },
    {
        "data": {
            "description": "The third course in our programming fundamentals sequence. It presumes that students understand and use functional and object-oriented design and abstract data types as needed. This course introduces balanced search trees, graphs, graph traversal algorithms, hash tables and sets, and complexity analysis and about classes of problems that require each data type. Students are required to design and implement using high quality professional code, a medium sized program, that demonstrates knowledge and use of latest language features, tools, and conventions. Additional topics introduced will include as needed for projects: inheritance and polymorphism; anonymous inner classes, lambda functions, performance analysis to discover and optimize critical code blocks. Students learn about industry standards for code development. Students will design and implement a medium size project with a more advanced user-interface design, such as a web or mobile application with a GUI and event- driven implementation; use of version-control software.",
            "id": "COMPSCI 400",
            "parent": "COMPSCI",
            "title": "PROGRAMMING III"
        }
    },
    {
        "data": {
            "id": "COMPSCI",
            "type": "compound"
        }
    },
    {
        "data": {
            "id": "CROSSLISTED",
            "type": "compound"
        }
    },
    {
        "data": {
            "id": "MATH",
            "type": "compound"
        }
    },
    {
        "data": {
            "source": "COMPSCI 200",
            "target": "COMPSCI 300"
        }
    },
    {
        "data": {
            "source": "COMPSCI 300",
            "target": "COMPSCI 400"
        }
    },
    {
        "data": {
            "source": "COMPSCI 400",
            "target": "COMPSCI 577"
        }
    },
    {
        "data": {
            "source": "COMPSCI/MATH/STAT 475",
            "target": "COMPSCI 577"
        }
    },
    {
        "data": {
            "source": "MATH 112",
            "target": "MATH 113"
        }
    },
    {
        "data": {
            "source": "MATH 112",
            "target": "MATH 221"
        }
    },
    {
        "data": {
            "source": "MATH 113",
            "target": "MATH 221"
        }
    },
    {
        "data": {
            "source": "MATH 221",
            "target": "MATH 222"
        }
    },
    {
        "data": {
            "source": "MATH 222",
            "target": "MATH 234"
        }
    },
    {
        "data": {
            "source": "MATH 234",
            "target": "MATH 341"
        }
    },
    {
        "data": {
            "source": "MATH 341",
            "target": "COMPSCI/MATH/STAT 475"
        }
    },
    {
        "data": {
            "source": "MATH 96",
            "target": "MATH 112"
        }
    }
]