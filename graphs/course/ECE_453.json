[
    {
        "data": {
            "description": "Hardware and software design for modern microprocessor-based embedded systems; study of the design process; emphasis on major team design project.",
            "id": "ECE 453",
            "parent": "ECE",
            "title": "EMBEDDED MICROPROCESSOR SYSTEM DESIGN"
        }
    },
    {
        "data": {
            "description": "Introduction to Object-Oriented Programming using classes and objects to solve more complex problems. Introduces array-based and linked data structures: including lists, stacks, and queues. Programming assignments require writing and developing multi-class (file) programs using interfaces, generics, and exception handling to solve challenging real world problems. Topics reviewed include reading/writing data and objects from/to files and exception handling, and command line arguments. Topics introduced: object-oriented design; class vs. object; create and define interfaces and iterators; searching and sorting; abstract data types (List,Stack,Queue,PriorityQueue(Heap),Binary Search Tree); generic interfaces (parametric polymorphism); how to design and write test methods and classes; array based vs. linked node implementations; introduction to complexity analysis; recursion.",
            "id": "COMPSCI 300",
            "parent": "COMPSCI",
            "title": "PROGRAMMING II"
        }
    },
    {
        "data": {
            "description": "Introduction to architecture, operation, and application of microprocessors; microprocessor programming; address decoding; system timing; parallel, serial, and analog I/O; interrupts and direct memory access; interfacing to static and dynamic RAM; microcontrollers.",
            "id": "ECE 353",
            "parent": "ECE",
            "title": "INTRODUCTION TO MICROPROCESSOR SYSTEMS"
        }
    },
    {
        "data": {
            "description": "Learn the process of incrementally developing small (200-500 lines) programs along with the fundamental Computer Science topics. These topics include: problem abstraction and decomposition, the edit-compile-run cycle, using variables of primitive and more complex data types, conditional and loop-based flow control, basic testing and debugging techniques, how to define and call functions (methods), and IO processing techniques. Also teaches and reinforces good programming practices including the use of a consistent style, and meaningful documentation. Intended for students who have no prior programming experience.",
            "id": "COMPSCI 200",
            "parent": "COMPSCI",
            "title": "PROGRAMMING I"
        }
    },
    {
        "data": {
            "description": "Logic components built with transistors, rudimentary Boolean algebra, basic combinational logic design, basic synchronous sequential logic design, basic computer organization and design, introductory machine- and assembly-language programming.",
            "id": "COMPSCI/ECE 252",
            "title": "INTRODUCTION TO COMPUTER ENGINEERING"
        }
    },
    {
        "data": {
            "description": "Software and hardware experiments with a microcomputer system. Assembly language programming, simple input/output interfacing, and interrupt processing in microcomputer systems.",
            "id": "ECE 315",
            "parent": "ECE",
            "title": "INTRODUCTORY MICROPROCESSOR LABORATORY"
        }
    },
    {
        "data": {
            "id": "COMPSCI",
            "type": "compound"
        }
    },
    {
        "data": {
            "id": "CROSSLISTED",
            "type": "compound"
        }
    },
    {
        "data": {
            "id": "ECE",
            "type": "compound"
        }
    },
    {
        "data": {
            "source": "COMPSCI 200",
            "target": "COMPSCI 300"
        }
    },
    {
        "data": {
            "source": "COMPSCI 300",
            "target": "ECE 353"
        }
    },
    {
        "data": {
            "source": "COMPSCI 300",
            "target": "ECE 453"
        }
    },
    {
        "data": {
            "source": "COMPSCI/ECE 252",
            "target": "ECE 353"
        }
    },
    {
        "data": {
            "source": "ECE 315",
            "target": "ECE 453"
        }
    },
    {
        "data": {
            "source": "ECE 353",
            "target": "ECE 315"
        }
    }
]